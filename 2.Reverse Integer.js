/**
 * 反转整数（简单类别下第2题，所有类别下第7题）
 * 题目：
 * 给定一个 32 位有符号整数，将整数中的数字进行反转。
 * 并且假设我们的环境只能存储 32 位有符号整数，
 * 其数值范围是 [−231,  231 − 1]。根据这个假设，反转后的整数大于这个值，则返回 0
 * 示例：
 * 输入: 123
 * 输出: 321
 * 输入: -123
 * 输出: -321
 * 输入: 120
 * 输出: 21
 */

 /**
  * 思路： 
  * 1.将数子转字符串
  * 2.检索字符串是否包含'-'数（也可以在传入后判断是否大于0）
  * 3.检索字符串尾部是否为0，为0的话截取字符串，去掉尾部的0
  * 4.把字符串转数组，调用数组的反转方法reverse,再把数组转回字符串，并把字符串转回数字
  * 5.检查反转后的结果是否大于[−231,  231 − 1]，大于这个值则返回0
  * 6.如果字符串带'-'的话还需要在结果处把'-'号加回去
  * 7.代码执行时间为92ms，超过95.41%的js提交
  */
var reverse = function(num) {
  num += ''
  let flag = num.indexOf('-') !== -1 ? true : false
  flag ? num = num.substring(1) : ''
  num[num.length - 1] === '0' ? num = num.substring(0, num.length - 1) : ''
  num = +num.split('').reverse().join('')
  let result = num < (2 ** 31 - 1) ? flag ? +('-' + num) : num : 0
  return result
};